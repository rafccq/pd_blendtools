from collections import namedtuple

import bpy

MeshData = namedtuple('MeshData', 'name verts faces')

Mesh_Spawn = MeshData('spawn',
  [
        (-0.9982, 1.0000, -0.0000), (1.0018, 1.0000, 0.0000),
        (-0.9982, -1.0000, -0.0000), (1.0018, -1.0000, 0.0000),
        (0.0018, 0.0000, -1.5000), (0.0018, 0.0000, 1.5000),
        (1.0115, 0.1500, 0.1500), (1.0115, 0.1500, -0.1500),
        (1.0115, -0.1500, 0.1500), (1.0115, -0.1500, -0.1500),
        (1.3115, 0.1500, 0.1500), (1.3115, 0.1500, -0.1500),
        (1.3115, -0.1500, 0.1500), (1.3115, -0.1500, -0.1500),
  ],
  [
        (0, 1, 4), (3, 5, 2), (3, 2, 4), (4, 2, 0), (5, 1, 0),
        (2, 5, 0), (4, 1, 3), (1, 5, 3), (7, 8, 6), (9, 12, 8),
        (12, 11, 10), (11, 6, 10), (12, 6, 8), (13, 7, 11),
        (7, 9, 8), (9, 13, 12), (12, 13, 11), (11, 7, 6),
        (12, 10, 6), (13, 9, 7),
  ]
)

Mesh_Hill = MeshData('hill',
  [
    (1.0000, 0.0000, -0.2917),   (0.9659, 0.2588, -0.2917),
    (0.8660, 0.5000, -0.2917),   (0.7071, 0.7071, -0.2917),
    (0.5000, 0.8660, -0.2917),   (0.2588, 0.9659, -0.2917),
    (-0.0000, 1.0000, -0.2917),   (-0.2588, 0.9659, -0.2917),
    (-0.5000, 0.8660, -0.2917),   (-0.7071, 0.7071, -0.2917),
    (-0.8660, 0.5000, -0.2917),   (-0.9659, 0.2588, -0.2917),
    (-1.0000, -0.0000, -0.2917),   (-0.9659, -0.2588, -0.2917),
    (-0.8660, -0.5000, -0.2917),   (-0.7071, -0.7071, -0.2917),
    (-0.5000, -0.8660, -0.2917),   (-0.2588, -0.9659, -0.2917),
    (0.0000, -1.0000, -0.2917),   (0.2588, -0.9659, -0.2917),
    (0.5000, -0.8660, -0.2917),   (0.7071, -0.7071, -0.2917),
    (0.8660, -0.5000, -0.2917),   (0.9659, -0.2588, -0.2917),
    (1.0000, 0.0000, 0.2083),   (0.9659, 0.2588, 0.4583),
    (0.8660, 0.5000, 0.2083),   (0.7071, 0.7071, 0.2083),
    (0.5000, 0.8660, 0.4583),   (0.2588, 0.9659, 0.2083),
    (-0.0000, 1.0000, 0.2083),   (-0.2588, 0.9659, 0.4583),
    (-0.5000, 0.8660, 0.2083),   (-0.7071, 0.7071, 0.2083),
    (-0.8660, 0.5000, 0.4583),   (-0.9659, 0.2588, 0.2083),
    (-1.0000, -0.0000, 0.2083),   (-0.9659, -0.2588, 0.4583),
    (-0.8660, -0.5000, 0.2083),   (-0.7071, -0.7071, 0.2083),
    (-0.5000, -0.8660, 0.4583),   (-0.2588, -0.9659, 0.2083),
    (0.0000, -1.0000, 0.2083),   (0.2588, -0.9659, 0.4583),
    (0.5000, -0.8660, 0.2083),   (0.7071, -0.7071, 0.2083),
    (0.8660, -0.5000, 0.4583),   (0.9659, -0.2588, 0.2083),
  ],
  [
    (46, 47, 22, 45), (25, 26, 1, 24), (23, 47, 24, 0), (4, 29, 5),
    (19, 44, 20), (31, 32, 7, 30), (20, 44, 45, 21), (17, 41, 42, 18),
    (13, 38, 14), (28, 29, 4, 27), (34, 35, 10, 33), (2, 26, 27, 3),
    (7, 32, 8), (22, 47, 23), (37, 38, 13, 36), (11, 35, 36, 12),
    (5, 29, 30, 6), (1, 26, 2), (16, 41, 17), (40, 41, 16, 39),
    (8, 32, 33, 9), (43, 44, 19, 42), (10, 35, 11), (4, 3, 27),
    (19, 18, 42), (13, 12, 36), (7, 6, 30), (22, 21, 45),
    (1, 0, 24), (16, 15, 39), (10, 9, 33), (14, 38, 39, 15),
  ]
)

Mesh_Case = MeshData('case',
  [
    (-0.7000, -1.0544, 0.1456),   (-0.7000, -1.0544, 0.3544),
    (-0.7000, 1.0544, 0.1456),   (-0.7000, 1.0544, 0.3544),
    (0.7000, -1.2000, 0.0000),   (0.7000, -1.2000, 0.5000),
    (0.7000, 1.2000, 0.0000),   (0.7000, 1.2000, 0.5000),
    (-0.7000, 1.2000, 0.0000),   (-0.7000, -1.2000, 0.0000),
    (-0.7000, -1.2000, 0.5000),   (-0.7000, 1.2000, 0.5000),
    (-0.7000, 0.7029, 0.1456),   (-0.7000, 0.3515, 0.1456),
    (-0.7000, -0.3515, 0.1456),   (-0.7000, -0.7029, 0.1456),
    (-0.7000, -0.7029, 0.3544),   (-0.7000, -0.3515, 0.3544),
    (-0.7000, 0.3515, 0.3544),   (-0.7000, 0.7029, 0.3544),
    (-0.7000, -0.7029, 0.1804),   (-0.7000, -0.3515, 0.1804),
    (-0.7000, 0.3515, 0.1804),   (-0.7000, 0.7029, 0.1804),
    (-0.7000, -0.7029, 0.3196),   (-0.7000, -0.3515, 0.3196),
    (-0.7000, 0.3515, 0.3196),   (-0.7000, 0.7029, 0.3196),
    (-0.9244, -0.7029, 0.1804),   (-0.9244, -0.3515, 0.1804),
    (-0.9244, 0.3515, 0.1804),   (-0.9244, 0.7029, 0.1804),
    (-0.9244, -0.7029, 0.3196),   (-0.9244, -0.3515, 0.3196),
    (-0.9244, 0.3515, 0.3196),   (-0.9244, 0.7029, 0.3196),
    (-1.0362, -0.7029, 0.1804),   (-1.0362, -0.3515, 0.1804),
    (-1.0362, 0.3515, 0.1804),   (-1.0362, 0.7029, 0.1804),
    (-1.0362, -0.7029, 0.3196),   (-1.0362, -0.3515, 0.3196),
    (-1.0362, 0.3515, 0.3196),   (-1.0362, 0.7029, 0.3196),
  ],
  [
    (8, 11, 7, 6), (6, 7, 5, 4), (4, 5, 10, 9), (8, 6, 4, 9),
    (7, 11, 10, 5), (0, 15, 14, 13, 12, 2, 8, 9), (1, 0, 9, 10),
    (3, 19, 18, 17, 16, 1, 10, 11), (2, 3, 11, 8), (21, 25, 17, 18, 26, 22, 13, 14),
    (23, 27, 19, 3, 2, 12), (15, 20, 21, 14), (13, 22, 23, 12), (22, 26, 34, 30),
    (23, 22, 30, 31), (0, 1, 16, 24, 20, 15), (24, 16, 17, 25), (26, 18, 19, 27),
    (42, 38, 37, 41), (35, 31, 39, 43), (20, 24, 32, 28), (24, 25, 33, 32),
    (27, 23, 31, 35), (21, 20, 28, 29), (25, 21, 29, 33), (26, 27, 35, 34),
    (36, 40, 41, 37), (38, 42, 43, 39), (34, 35, 43, 42), (31, 30, 38, 39),
    (34, 42, 41, 33), (28, 32, 40, 36), (32, 33, 41, 40), (29, 28, 36, 37),
    (38, 30, 29, 37), (30, 34, 33, 29),
  ]
)

Mesh_CaseRespawn = MeshData('caserespawn',
  [
    (-0.6382, 0.6400, -0.0000), (0.6418, 0.6400, 0.0000),
    (-0.6382, -0.6400, -0.0000), (0.6418, -0.6400, 0.0000),
    (0.0018, 0.0000, 1.5000), (0.6509, 0.1500, 0.1500),
    (0.6509, 0.1500, -0.1500), (0.6509, -0.1500, 0.1500),
    (0.6509, -0.1500, -0.1500), (0.9509, 0.1500, 0.1500),
    (0.9509, 0.1500, -0.1500), (0.9509, -0.1500, 0.1500),
    (0.9509, -0.1500, -0.1500), (-0.6382, 0.6400, -1.5000),
    (0.6418, 0.6400, -1.5000), (-0.6382, -0.6400, -1.5000),
    (0.6418, -0.6400, -1.5000)
  ],
  [
    (3, 4, 2), (4, 1, 0), (2, 4, 0), (1, 4, 3),
    (10, 6, 5, 9), (6, 8, 7, 5), (12, 8, 6, 10), (11, 12, 10, 9),
    (11, 9, 5, 7), (8, 12, 11, 7), (3, 16, 14, 1), (2, 15, 16, 3),
    (0, 13, 15, 2),(1, 14, 13, 0),(15, 13, 14, 16)
  ]
)

Mesh_Cube = MeshData('cube',
  [
    (-1.0000, -1.0000, -1.0000), (-1.0000, -1.0000, 1.0000),
    (-1.0000, 1.0000, -1.0000), (-1.0000, 1.0000, 1.0000),
    (1.0000, -1.0000, -1.0000), (1.0000, -1.0000, 1.0000),
    (1.0000, 1.0000, -1.0000),(1.0000, 1.0000, 1.0000)
  ],
  [
    (0, 1, 3, 2), (2, 3, 7, 6), (6, 7, 5, 4),
    (4, 5, 1, 0), (2, 6, 4, 0), (7, 3, 1, 5)
  ]
                     )

Mesh_Weapon = MeshData('weapon',
  [
    (0.9478, 0.0237, -0.6926), (0.9478, 0.2253, -0.6926),
    (1.4569, 0.0237, -0.6921), (1.4569, 0.2253, -0.6921),
    (0.6547, 0.0237, 0.1626), (0.6547, 0.2253, 0.1626),
    (1.1960, 0.0237, 0.1631), (1.1960, 0.2253, 0.1631),
    (1.2449, -0.0821, 0.1730), (1.2449, 0.3311, 0.1730),
    (1.2444, -0.0821, 0.7143), (1.2444, 0.3311, 0.7143),
    (-0.7604, -0.0044, 0.2488), (-0.7604, 0.2534, 0.2488),
    (-0.7608, -0.0044, 0.6347), (-0.7608, 0.2534, 0.6347),
    (-0.7608, 0.3311, 0.7124), (-0.7608, -0.0821, 0.7124),
    (-0.7603, -0.0821, 0.1711), (-0.7603, 0.3311, 0.1711),
    (-0.3553, 0.2534, 0.6351), (-0.3553, -0.0044, 0.6351),
    (-0.3549, -0.0044, 0.2492),(-0.3549, 0.2534, 0.2492)
  ],
  [
    (0, 1, 3, 2), (2, 3, 7, 6), (6, 7, 5, 4), (4, 5, 1, 0),
    (2, 6, 4, 0), (7, 3, 1, 5), (8, 9, 11, 10), (10, 11, 16, 17),
    (12, 14, 21, 22), (18, 19, 9, 8), (10, 17, 18, 8), (16, 11, 9, 19),
    (15, 14, 17, 16), (14, 12, 18, 17), (13, 15, 16, 19), (12, 13, 19, 18),
    (21, 20, 23, 22),(15, 13, 23, 20),(14, 15, 20, 21),(13, 12, 22, 23)
  ]
)


TemplateMeshes = {
    m.name: m for m in [
        Mesh_Spawn,
        Mesh_Hill,
        Mesh_Case,
        Mesh_CaseRespawn,
        Mesh_Cube,
        Mesh_Weapon,
    ]
}

def create_mesh(objname, meshname, copy=False):
    if meshname not in TemplateMeshes.keys():
        raise RuntimeError(f'Invalid mesh type: {meshname}')

    m = TemplateMeshes[meshname]
    meshname = f'meshdata_{meshname}'

    # only create a new mesh if it's not already in the library (or user chose to copy)
    if copy or meshname not in bpy.data.meshes:
        verts, faces = m.verts, m.faces
        mesh = bpy.data.meshes.new(meshname)
        mesh.from_pydata(verts, [], faces)
    else:
        mesh = bpy.data.meshes[meshname]

    obj = bpy.data.objects.new(objname, mesh)
    return obj
